#!/bin/bash

# Activate conda environment
source ~/miniforge3/etc/profile.d/conda.sh
conda activate rna-tools

# Define directories
RAW_DIR="/raid/VIDRL-USERS/HOME/aduncan/projects/rna_pipeline/mgp_test_data/rawdata"
PREPROC_DIR="/raid/VIDRL-USERS/HOME/aduncan/projects/rna_pipeline/mgp_test_data/preproc"
INTERMEDIATE_DIR="/raid/VIDRL-USERS/HOME/aduncan/projects/rna_pipeline/mgp_test_data/intermediary_files"

# Create output directories if they don't exist
mkdir -p "$PREPROC_DIR" "$INTERMEDIATE_DIR"

# Loop through each R1 fastq file
for R1 in $RAW_DIR/*_R1.fastq.gz; do
    SAMPLE=$(basename "$R1" _R1.fastq.gz)
    R2="${R1/_R1.fastq.gz/_R2.fastq.gz}"

    echo "=========="
    echo "Processing sample: $SAMPLE"
    echo "=========="

    # Define all intermediate and final file paths
    STATS1="$INTERMEDIATE_DIR/${SAMPLE}_stats1.json"
    PHIX_R1="$INTERMEDIATE_DIR/${SAMPLE}_phix_R1.fastq.gz"
    PHIX_R2="$INTERMEDIATE_DIR/${SAMPLE}_phix_R2.fastq.gz"
    RRNA_R1="$INTERMEDIATE_DIR/${SAMPLE}_rrna_R1.fastq.gz"
    RRNA_R2="$INTERMEDIATE_DIR/${SAMPLE}_rrna_R2.fastq.gz"
    DEDUP_R1="$INTERMEDIATE_DIR/${SAMPLE}_dedup_R1.fastq.gz"
    DEDUP_R2="$INTERMEDIATE_DIR/${SAMPLE}_dedup_R2.fastq.gz"
    ADAPT_R1="$INTERMEDIATE_DIR/${SAMPLE}_adapt_R1.fastq.gz"
    ADAPT_R2="$INTERMEDIATE_DIR/${SAMPLE}_adapt_R2.fastq.gz"
    POLY_R1="$INTERMEDIATE_DIR/${SAMPLE}_poly_R1.fastq.gz"
    POLY_R2="$INTERMEDIATE_DIR/${SAMPLE}_poly_R2.fastq.gz"
    NTRIM_R1="$INTERMEDIATE_DIR/${SAMPLE}_ntrim_R1.fastq.gz"
    NTRIM_R2="$INTERMEDIATE_DIR/${SAMPLE}_ntrim_R2.fastq.gz"
    QTRIM_R1="$INTERMEDIATE_DIR/${SAMPLE}_qtrim_R1.fastq.gz"
    QTRIM_R2="$INTERMEDIATE_DIR/${SAMPLE}_qtrim_R2.fastq.gz"
    CLEANED_R1="$PREPROC_DIR/${SAMPLE}_cleaned_R1.fastq.gz"
    CLEANED_R2="$PREPROC_DIR/${SAMPLE}_cleaned_R2.fastq.gz"
    STATS2="$PREPROC_DIR/${SAMPLE}_stats2.json"

    #### STEP 1: Get stats on raw reads
    hts_Stats -1 "$R1" -2 "$R2" -f "$INTERMEDIATE_DIR/${SAMPLE}_stats1" -L "$STATS1"

    #### Remove phix
    hts_SeqScreener -1 "$R1" -2 "$R2" phix --remove \
      --out1 "$PHIX_R1" --out2 "$PHIX_R2"

    #### Screen for rRNA (do not remove)
    hts_SeqScreener -1 "$PHIX_R1" -2 "$PHIX_R2" rrna \
      --out1 "$RRNA_R1" --out2 "$RRNA_R2"

    #### STEP 4: UMI-tools dedup (make sure input exists)
    if [[ -f "$RRNA_R1" && -f "$RRNA_R2" ]]; then
        umi_tools dedup --stdin="$RRNA_R1" --stdout="$DEDUP_R1"
        umi_tools dedup --stdin="$RRNA_R2" --stdout="$DEDUP_R2"
    else
        echo "Missing rRNA-screened files for $SAMPLE, skipping."
        continue
    fi

    #### STEP 5: Trim adapters
    hts_AdapterTrimmer -1 "$DEDUP_R1" -2 "$DEDUP_R2" \
        --out1 "$ADAPT_R1" --out2 "$ADAPT_R2"

    #### STEP 6: Trim polyA/T tails
    hts_PolyATTrim -1 "$ADAPT_R1" -2 "$ADAPT_R2" \
        --out1 "$POLY_R1" --out2 "$POLY_R2"

    #### STEP 7: Remove N bases
    hts_NTrimmer -1 "$POLY_R1" -2 "$POLY_R2" \
        --out1 "$NTRIM_R1" --out2 "$NTRIM_R2"

    #### STEP 8: Quality trim
    hts_QWindowTrim -1 "$NTRIM_R1" -2 "$NTRIM_R2" \
        --out1 "$QTRIM_R1" --out2 "$QTRIM_R2"

    #### STEP 9: Length filter (<50bp removed)
    hts_LengthFilter -1 "$QTRIM_R1" -2 "$QTRIM_R2" --min-length 50 \
        --out1 "$CLEANED_R1" --out2 "$CLEANED_R2"

    #### STEP 10: Final stats
    hts_Stats -1 "$CLEANED_R1" -2 "$CLEANED_R2" -f "$PREPROC_DIR/${SAMPLE}_stats2" -L "$STATS2"

    echo "Finished processing sample: $SAMPLE"
done

echo "=========="
echo "Pipeline run completed!"
echo "=========="
